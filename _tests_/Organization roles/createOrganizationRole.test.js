describe('üö´ –ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç', () => {
  test.skip('—ç—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç', () => {
    // –ø—É—Å—Ç–æ
  });
});


// require("dotenv").config();
// const axios = require("axios");
// const qs = require("qs");

// describe("‚ûï –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏ –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", () => {
//   let accessToken;

//   beforeAll(async () => {
//     const payload = qs.stringify({
//       grant_type: process.env.MANAGER_GRANT_TYPE,
//       phone_number: process.env.MANAGER_PHONE_NUMBER,
//       client_id: process.env.MANAGER_CLIENT_ID,
//       code: process.env.MANAGER_OTP_CODE,
//     });

//     const res = await axios.post(
//       `${process.env.KEYCLOAK_URL}/protocol/openid-connect/token`,
//       payload,
//       { headers: { "Content-Type": "application/x-www-form-urlencoded" } }
//     );

//     expect(res.status).toBe(200);
//     accessToken = res.data.access_token;
//     console.log("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä—Å–∫–∏–π —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω");
//   });

//   it('–¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å —Ä–æ–ª—å "–∞–¥–º–∏–Ω"', async () => {
//     const mutation = `
//       mutation ($input: CreateOrgRoleInput!) {
//         createOrganizationRole(input: $input) {
//           id
//         }
//       }
//     `;

//     const variables = {
//       input: {
//         name: "–∞–¥–º–∏–Ω",
//         description: "–∫–∞–∫–æ–µ —Ç–æ –æ–ø–∏—Å–∞–Ω–∏–µ (–¥–æ 5000 —Å–∏–º–≤–æ–ª–æ–≤)"
//       }
//     };

//     const response = await axios.post(
//       process.env.GRAPHQL_URL,
//       {
//         query: mutation,
//         variables,
//       },
//       {
//         headers: {
//           Authorization: `Bearer ${accessToken}`,
//           "x-org-id": process.env.ORG_ID,
//           "x-member-id": process.env.MEMBER_ID,
//           "Content-Type": "application/json",
//         },
//       }
//     );

//     console.log("üì¶ –û—Ç–≤–µ—Ç:");
//     console.dir(response.data, { depth: null, colors: true });

//     const result = response.data?.data?.createOrganizationRole;
//     expect(result).toBeDefined();
//     expect(result.id).toBeDefined();
//     console.log("‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–æ–ª—å —Å ID:", result.id);
//   });
// });
