// _tests_/getTransitAccountBalance.test.js
require("dotenv").config();
const axios = require("axios");
const { getAdminTokenByOtp } = require("../../api/AdminToken");

describe("üí≥ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —Ç—Ä–∞–Ω–∑–∏—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞", () => {
  let token;

  beforeAll(async () => {
    const tokenResponse = await getAdminTokenByOtp();
    token = tokenResponse.access_token;
    console.log("üîê –¢–æ–∫–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω");
    expect(token).toBeDefined();
  });

  it("–¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å –±–∞–ª–∞–Ω—Å —Ç—Ä–∞–Ω–∑–∏—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞", async () => {
    const response = await axios.post(
      process.env.GRAPHQL_URL,
      {
        query: `
          query {
            transitAccountBalance {
              balance
            }
          }
        `
      },
      {
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json"
        }
      }
    );

    console.log("üì¶ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:");
    console.dir(response.data, { depth: null, colors: true });

    const balance = response.data?.data?.transitAccountBalance?.balance;
    expect(balance).toBeDefined();

    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å —Ç—Ä–∞–Ω–∑–∏—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞: ${balance}`);
  });
});
