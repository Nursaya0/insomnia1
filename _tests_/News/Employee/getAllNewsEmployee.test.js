require("dotenv").config();
const axios = require("axios");
const qs = require("qs");

describe("üì∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (–ø–æ OTP —Ç–æ–∫–µ–Ω—É)", () => {
  let accessToken;

  beforeAll(async () => {
    const data = qs.stringify({
      grant_type: "password",
      phone_number: "77071200998",
      client_id: "mobile-frontend",
      code: "0998"
    });

    const response = await axios.post(
      `${process.env.KEYCLOAK_URL}/protocol/openid-connect/token`,
      data,
      {
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        }
      }
    );

    expect(response.status).toBe(200);
    expect(response.data).toHaveProperty("access_token");
    accessToken = response.data.access_token;
    // console.log("‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω");
  });

  it("–¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–¥—Ä–æ–±–Ω–æ", async () => {
    const query = `
      query {
        news(page: 0, size: 10, global: true) {
          totalElements
          content {
            id
            title
            description
            content
            imageFileLink
          }
        }
      }
    `;

    const response = await axios.post(
      process.env.GRAPHQL_URL,
      { query },
      {
        headers: {
          Authorization: `Bearer ${accessToken}`,
          "Content-Type": "application/json",
          "X-Org-Id": "14",
          "X-Member-Id": "47716"
        }
      }
    );

    expect(response.status).toBe(200);

    const news = response.data?.data?.news;
    expect(news).toBeDefined();
    console.log(`üì∞ –ü–æ–ª—É—á–µ–Ω–æ ${news.totalElements} –Ω–æ–≤–æ—Å—Ç–µ–π`);

    // –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—É—é –Ω–æ–≤–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é
    console.log("üìã –ù–æ–≤–æ—Å—Ç–∏:");
    news.content.forEach((item, index) => {
      console.log(`\nüßæ –ù–æ–≤–æ—Å—Ç—å ‚Ññ${index + 1}:`);
      console.dir(item, { depth: null, colors: true });
    });
  });
});
