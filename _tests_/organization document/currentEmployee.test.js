require("dotenv").config();
const axios = require("axios");
const qs = require("qs");

describe("üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (currentEmployee)", () => {
  let accessToken;

  beforeAll(async () => {
    const data = qs.stringify({
      grant_type: "password",
      phone_number: "77474818132",
      client_id: "mobile-frontend",
      code: "8132"
    });

    const res = await axios.post(
      `${process.env.KEYCLOAK_URL}/protocol/openid-connect/token`,
      data,
      {
        headers: {
          "Content-Type": "application/x-www-form-urlencoded"
        }
      }
    );

    expect(res.status).toBe(200);
    accessToken = res.data.access_token;
    console.log("‚úÖ Access Token –ø–æ–ª—É—á–µ–Ω");
  });

  it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–µ", async () => {
    const query = `
      query {
        currentEmployee {
          id
          firstName
          lastName
          user {
            id
            phoneNumber
          }
          contractOffer {
            fileLink
            signed
            documentId
          }
        }
      }
    `;

    const res = await axios.post(
      process.env.GRAPHQL_URL,
      { query },
      {
         headers: {
          Authorization: `Bearer ${accessToken}`,
          "Content-Type": "application/json",
          "X-Org-Id": "55",    
          "X-Member-Id": "69114"  
        }
      }
    );

    expect(res.status).toBe(200);

    const employee = res.data.data?.currentEmployee;
    if (employee) {
      console.log("üë§ –°–æ—Ç—Ä—É–¥–Ω–∏–∫:", employee.firstName, employee.lastName);
      console.log("üìÑ –î–æ–∫—É–º–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–Ω:", employee.contractOffer?.signed);
    } else {
      console.error("‚ùå –û—à–∏–±–∫–∞: —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω", JSON.stringify(res.data, null, 2));
    }
  });
});
