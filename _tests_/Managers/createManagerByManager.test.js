test.skip('—ç—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω', () => {
  // –æ–Ω –¥–∞–∂–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
  expect(true).toBe(false);
});


// require("dotenv").config();
// const axios = require("axios");
// const { getManagerTokenByOtp } = require("../api/ManagerToken");

// describe("üÜï –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–¥ —Ç–æ–∫–µ–Ω–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞", () => {
//   let token;

//   const variables = {
//     phoneNumber: "77054244322",
//     organizationId: 14,
//     firstName: "Nursaya",
//     lastName: "Nursaya",
//     middleName: "Nursaya",
//     orgRoleId: 25
//   };

//   beforeAll(async () => {
//     const tokenResponse = await getManagerTokenByOtp();
//     token = tokenResponse.access_token;
//     expect(token).toBeDefined();
//     console.log("üîê –¢–æ–∫–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω");
//   });

//   it("–¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞", async () => {
//     const response = await axios.post(
//       process.env.GRAPHQL_URL,
//       {
//         query: `
//           mutation CreateManager(
//             $phoneNumber: String!
//             $organizationId: Int!
//             $firstName: String
//             $lastName: String
//             $middleName: String
//             $orgRoleId: Int
//           ) {
//             createManager(
//               input: {
//                 phoneNumber: $phoneNumber
//                 organizationId: $organizationId
//                 firstName: $firstName
//                 lastName: $lastName
//                 middleName: $middleName
//                 orgRoleId: $orgRoleId
//               }
//             ) {
//               id
//             }
//           }
//         `,
//         variables
//       },
//       {
//         headers: {
//           Authorization: `Bearer ${token}`,
//           "Content-Type": "application/json",
//           "x-org-id": process.env.ORG_ID,
//           "x-member-id": process.env.MEMBER_ID
//         }
//       }
//     );

//     console.log("üì¶ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:");
//     console.dir(response.data, { depth: null, colors: true });

//     const createdId = response.data?.data?.createManager?.id;

//     expect(createdId).toBeDefined();
//     console.log(`‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Å ID: ${createdId}`);
//   });
// });
