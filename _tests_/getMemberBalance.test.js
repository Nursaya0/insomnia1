// _tests_/getMemberBalance.test.js
require("dotenv").config();
const axios = require("axios");
const { getManagerTokenByOtp } = require("../api/ManagerToken");

describe("üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ MEMBER_ID", () => {
  let token;

  beforeAll(async () => {
    const tokenResponse = await getManagerTokenByOtp();
    token = tokenResponse.access_token;
    console.log("üîë –ú–µ–Ω–µ–¥–∂–µ—Ä —Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω");
    expect(token).toBeDefined();
  });

  it("–¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", async () => {
    const response = await axios.post(
      process.env.GRAPHQL_URL,
      {
        query: `
          query {
            currentOrganizationBalance {
              balance
            }
          }
        `
      },
      {
        headers: {
          Authorization: `Bearer ${token}`,
          "Content-Type": "application/json",
          "x-member-id": process.env.MEMBER_ID, // üî• –≤–æ—Ç —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –≤–∞–∂–Ω–∞!
        },
      }
    );

    console.log("üì¶ –ü–û–õ–ù–´–ô –û–¢–í–ï–¢ –û–¢ –°–ï–†–í–ï–†–ê:");
    console.dir(response.data, { depth: null, colors: true });

    const balance = response.data?.data?.currentOrganizationBalance?.balance;

    expect(balance).toBeDefined();
    console.log(`‚úÖ –ë–∞–ª–∞–Ω—Å –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${balance}`);
  });
});
